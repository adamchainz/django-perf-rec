[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=77",
]

[project]
name = "django-perf-rec"
version = "4.29.0"
description = "Keep detailed records of the performance of your Django code."
readme = "README.rst"
keywords = [
  "Django",
]
license = "MIT"
license-files = [ "LICENSE" ]
authors = [
  { name = "Adam Johnson", email = "me@adamj.eu" },
]
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 6 - Mature",
  "Framework :: Django :: 4.2",
  "Framework :: Django :: 5.0",
  "Framework :: Django :: 5.1",
  "Framework :: Django :: 5.2",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Typing :: Typed",
]
dependencies = [
  "django>=4.2",
  "pyyaml",
  "sqlparse>=0.4.4",
]
urls = { Changelog = "https://github.com/adamchainz/django-perf-rec/blob/main/CHANGELOG.rst", Funding = "https://adamj.eu/books/", Repository = "https://github.com/adamchainz/django-perf-rec" }
entry-points.pytest11.django_perf_rec = "django_perf_rec.pytest_plugin"

[dependency-groups]
test = [
  "pygments",
  "pytest",
  "pytest-django",
  "pytest-randomly",
  "pyyaml",
  "sqlparse",
]
django42 = [ "django>=4.2a1,<5; python_version>='3.8'" ]
django50 = [ "django>=5.0a1,<5.1; python_version>='3.10'" ]
django51 = [ "django>=5.1a1,<5.2; python_version>='3.10'" ]
django52 = [ "django>=5.2a1,<6; python_version>='3.10'" ]

[tool.ruff]
lint.select = [
  # flake8-bugbear
  "B",
  # flake8-comprehensions
  "C4",
  # pycodestyle
  "E",
  # Pyflakes errors
  "F",
  # isort
  "I",
  # flake8-simplify
  "SIM",
  # flake8-tidy-imports
  "TID",
  # pyupgrade
  "UP",
  # Pyflakes warnings
  "W",
]
lint.ignore = [
  # flake8-bugbear opinionated rules
  "B9",
  # line-too-long
  "E501",
  # suppressible-exception
  "SIM105",
  # if-else-block-instead-of-if-exp
  "SIM108",
]
lint.extend-safe-fixes = [
  # non-pep585-annotation
  "UP006",
]
lint.isort.required-imports = [ "from __future__ import annotations" ]

[tool.pyproject-fmt]
max_supported_python = "3.13"

[tool.pytest.ini_options]
addopts = """\
    --strict-config
    --strict-markers
    --ds=tests.settings
    """
django_find_project = false
xfail_strict = true

[tool.mypy]
enable_error_code = [
  "ignore-without-code",
  "redundant-expr",
  "truthy-bool",
]
mypy_path = "src/"
namespace_packages = false
plugins = [
  "mypy_django_plugin.main",
]
strict = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests.*"
allow_untyped_defs = true

[tool.django-stubs]
django_settings_module = "tests.settings"

[tool.rstcheck]
report_level = "ERROR"

[tool.uv]
conflicts = [
  [
    { group = "django42" },
    { group = "django50" },
    { group = "django51" },
    { group = "django52" },
  ],
]
